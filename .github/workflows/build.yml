name: Build binaries

on:
  push:
    tags:
      - v*

  # Allow running from Actions tab
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Extract version
        id: getVersion
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Checkout source
        uses: actions/checkout@v2

      - name: Install Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Build
        run: ./build-all

      - name: Create Release Text
        run: awk -v RS= '/a/ { print; exit }' CHANGELOG.md > RELEASE.md

      - name: Create a Release
        uses: actions/create-release@v1
        id: makeRelease
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.getVersion.outputs.VERSION }}
          tag_name: ${{ github.ref }}
          body_path: RELEASE.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Upload binary (Linux)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.makeRelease.outputs.upload_url }}
          asset_name: marvin-cli-linux
          asset_path: ./out/linux/marvin-cli
          asset_content_type: application/octet-stream

      - name: Upload binary (MacOS)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.makeRelease.outputs.upload_url }}
          asset_name: marvin-cli-macos
          asset_path: ./out/macos/marvin-cli
          asset_content_type: application/octet-stream

      - name: Upload binary (MacOS Arm)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.makeRelease.outputs.upload_url }}
          asset_name: marvin-cli-macos-arm
          asset_path: ./out/macos-arm/marvin-cli
          asset_content_type: application/octet-stream

      - name: Upload binary (Windows)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.makeRelease.outputs.upload_url }}
          asset_name: marvin-cli-win.exe
          asset_path: ./out/windows/marvin-cli.exe
          asset_content_type: application/octet-stream

